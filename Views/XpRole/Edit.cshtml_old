<form id='eform' class='xg-form' style="margin-bottom:0;">
    @await Component.InvokeAsync("XiHide", new { fid = "Id" })
    @await Component.InvokeAsync("XiText", new { title = "角色名稱", fid = "Name", maxLen = 30, required = true })
</form>

<form class='xg-form'>
    <div class='row'>
        <div class='col-md-2 xg-label'>用戶清單</div>
        <div class='col-md-8 xg-input'>
            <!-- 用 table 來控制多行時上下欄位的寬度一致 -->
            <table width="100%" border="0" cellspacing="0" cellpadding="0">
                <tbody>
                    <tr>
                        <td id="divUsers">
                            @foreach (var row in (List<IdStrDto>)ViewBag.Users)
                            {
                                @await Component.InvokeAsync("XiCheck", new { fid = row.Id, value = row.Id, label = row.Str })
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</form>

<div class='xg-btns-box'>
    <span class="xg-block-label">角色功能</span>
    @await Component.InvokeAsync("XgAddRow", "_me.mRoleProg.onAddRow()")
</div>
<form id='eformRoleProg' class='xg-form' style="border:none;">
    <table class="table table-bordered xg-table xg-no-hline" cellspacing="0">
        <thead>
            <tr>
                @await Component.InvokeAsync("XgTh", new { title = "功能", required = true })
                <th>新增</th>
                <th>查詢</th>
                <th>修改</th>
                <th>刪除</th>
                <th>列印</th>
                <th>匯出</th>
                <th>檢視</th>
                <th>維護</th>
            </tr>
        </thead>
        <tbody id="tbodyRoleProg"></tbody>
    </table>
</form>
@await Component.InvokeAsync("XgSaveBack")

<script id="tplRoleProg" type="text/template">
    <tr>
        @await Component.InvokeAsync("XiHide", new { fid = "Id" })
        @await Component.InvokeAsync("XiHide", new { fid = "RoleId" })
        <td>@await Component.InvokeAsync("XiSelect", new { fid = "ProgId", rows = (List<IdStrDto>)ViewBag.Progs, required = true })</td>
        <td class="xg-center">@await Component.InvokeAsync("XiCheck", new { fid = "FunCreate", value = "9" })</td>
        <td class="xg-center">@await Component.InvokeAsync("XiCheck", new { fid = "FunRead", value = "9" })</td>
        <td class="xg-center">@await Component.InvokeAsync("XiCheck", new { fid = "FunUpdate", value = "9" })</td>
        <td class="xg-center">@await Component.InvokeAsync("XiCheck", new { fid = "FunDelete", value = "9" })</td>
        <td class="xg-center">@await Component.InvokeAsync("XiCheck", new { fid = "FunPrint", value = "9" })</td>
        <td class="xg-center">@await Component.InvokeAsync("XiCheck", new { fid = "FunExport", value = "9" })</td>
        <td class="xg-center">@await Component.InvokeAsync("XiCheck", new { fid = "FunView", value = "9" })</td>

        <td width='60px' class='text-center'>@await Component.InvokeAsync("XgDeleteRow", "_me.mRoleProg.onDeleteRow(this)")</td>
    </tr>
</script>